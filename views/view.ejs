<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spotify Playlists</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="max-w-3xl mx-auto py-8">
        <h1 class="text-3xl font-bold mb-4">Spotify Playlists</h1>
        <div id="playlistList" class="divide-y divide-gray-200">
        </div>
        <div id="pagination" class="flex justify-center mt-8">
        </div>
    </div>

    <script>
        // Function to display playlists
        function displayPlaylists(playlists) {
            const playlistList = document.getElementById('playlistList');

            // Clear previous playlist items
            playlistList.innerHTML = '';

            playlists.items.forEach(playlist => {
                const playlistItem = document.createElement('div');
                playlistItem.classList.add('py-4', 'flex', 'items-center', 'justify-between');

                const playlistName = document.createElement('span');
                playlistName.textContent = playlist.name;

                const songCount = document.createElement('span');
                songCount.textContent = `${playlist.tracks.total} songs`;

                playlistItem.appendChild(playlistName);
                playlistItem.appendChild(songCount);

                playlistList.appendChild(playlistItem);
            });
        }

        // Function to display pagination buttons
        function displayPagination(totalPages) {
            const pagination = document.getElementById('pagination');

            // Clear previous pagination buttons
            pagination.innerHTML = '';

            for (let i = 1; i <= totalPages; i++) {
                const pageButton = document.createElement('button');
                pageButton.textContent = i;
                pageButton.classList.add('mx-2', 'px-4', 'py-2', 'bg-blue-500', 'text-white', 'rounded-md', 'hover:bg-blue-600', 'focus:outline-none');

                // Add event listener to each pagination button
                pageButton.addEventListener('click', function() {
                    // Call API with page number
                    fetch(`/view?page=${i}`)
                    .then(response => response.json())
                    .then(data => {
                        displayPlaylists(data);
                    })
                    .catch(error => {
                        console.error('Error fetching playlists:', error);
                    });
                });

                pagination.appendChild(pageButton);
            }
        }

        // Initial fetch for first page
        fetch('/view?page=1')
        .then(response => response.json())
        .then(data => {
            displayPlaylists(data);
            displayPagination(Math.ceil(data.total / data.limit));
        })
        .catch(error => {
            console.error('Error fetching playlists:', error);
        });
    </script>
</body>
</html> -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Spotify Playlists</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100">
    <div class="max-w-3xl mx-auto py-8">
        <h1 class="text-3xl font-bold mb-4">Spotify Playlists</h1>
        <div id="playlistList" class="divide-y divide-gray-200">
        </div>
        <div id="pagination" class="flex justify-center mt-8">
        </div>
    </div>

    <script>
        function displayPlaylists(playlists) {
            const playlistList = document.getElementById('playlistList');

            playlistList.innerHTML = '';

            playlists.items.forEach(playlist => {
                const playlistItem = document.createElement('div');
                playlistItem.classList.add('py-4', 'flex', 'items-center', 'justify-between');
                const playlistTitle = document.createElement('a');
                playlistTitle.textContent = playlist.name;
                playlistTitle.href = `/getPlayListDetails/${playlist.id}`;
                playlistTitle.onclick = function() {
                    console.log('Playlist title clicked');
                    fetch(`/getPlayListDetails/${playlist.id}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log(data); 
                    })
                    .catch(error => {
                        console.error('Error fetching playlist details:', error);
                    });
                };

                const songCount = document.createElement('span');
                songCount.textContent = `${playlist.tracks.total} songs`;

                playlistItem.appendChild(playlistTitle);
                playlistItem.appendChild(songCount);

                playlistList.appendChild(playlistItem);
            });
        }

        function displayPagination(totalPages) {
            const pagination = document.getElementById('pagination');

            pagination.innerHTML = '';

            for (let i = 1; i <= totalPages; i++) {
                const pageButton = document.createElement('button');
                pageButton.textContent = i;
                pageButton.classList.add('mx-2', 'px-4', 'py-2', 'bg-blue-500', 'text-white', 'rounded-md', 'hover:bg-blue-600', 'focus:outline-none');

                pageButton.addEventListener('click', function() {
                    fetch(`/view?page=${i}`)
                    .then(response => response.json())
                    .then(data => {
                        displayPlaylists(data);
                    })
                    .catch(error => {
                        console.error('Error fetching playlists:', error);
                    });
                });

                pagination.appendChild(pageButton);
            }
        }

        fetch('/view?page=1')
        .then(response => response.json())
        .then(data => {
            displayPlaylists(data);
            displayPagination(Math.ceil(data.total / data.limit));
        })
        .catch(error => {
            console.error('Error fetching playlists:', error);
        });
    </script>
</body>
</html>
